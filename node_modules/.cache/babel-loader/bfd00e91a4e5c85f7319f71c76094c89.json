{"ast":null,"code":"var _jsxFileName = \"/Users/nagaishogo/pretest/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: []\n    };\n  }\n\n  handleChange(event) {\n    let lists = this.state.lists;\n    this.setState({\n      lists: lists.concat([event.target.value])\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Todo\\u30EA\\u30B9\\u30C8\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      alllists: this.state.lists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      newlist: this.state.lists[-1],\n      onChange: () => this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nclass List extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, this.props.alllists.map((list, number) => {\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"list\");\n    }));\n  }\n\n}\n\nclass Form extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.props.newlist,\n      onChange: () => this.pros.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u8FFD\\u52A0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nagaishogo/pretest/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Table","Component","constructor","props","state","lists","handleChange","event","setState","concat","target","value","render","List","alllists","map","list","number","Form","newlist","pros","onChange","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAE;AADE,KAAX;AAGD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACjB,QAAIF,KAAK,GAAC,KAAKD,KAAL,CAAWC,KAArB;AACA,SAAKG,QAAL,CAAc;AACZH,MAAAA,KAAK,EAAEA,KAAK,CAACI,MAAN,CAAa,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAb;AADK,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,KADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiB,CAAC,CAAlB,CADX;AAEE,MAAA,QAAQ,EAAE,MAAI,KAAKC,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,CADF;AAgBD;;AAhCgC;;AAkCnC,MAAMO,IAAN,SAAmBjB,KAAK,CAACK,SAAzB,CAAkC;AAChCW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWW,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAMC,MAAN,KAAe;AACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJA,CADH,CADF;AASD;;AAX+B;;AAalC,MAAMC,IAAN,SAAmBtB,KAAK,CAACK,SAAzB,CAAkC;AAChCW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWgB,OADlB;AAC2B,MAAA,QAAQ,EAAE,MAAI,KAAKC,IAAL,CAAUC,QADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAME;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AAZ+B;;AAelCxB,QAAQ,CAACe,MAAT,eACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Table extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      lists: [],\n    }\n  }\n\n  handleChange(event){\n    let lists=this.state.lists;\n    this.setState({\n      lists: lists.concat([event.target.value])\n    });\n  }\n\n  render(){\n    return(\n      <div className=\"table\">\n        <h1>Todoリスト</h1>\n          <div className=\"list\">\n            <List\n              alllists={this.state.lists}\n            />\n          </div>\n          <div className=\"form\">\n            <Form\n              newlist={this.state.lists[-1]}\n              onChange={()=>this.handleChange}\n            />\n          </div>\n      </div>\n    );\n  }\n}\nclass List extends React.Component{\n  render(){\n    return(\n      <div className=\"list\">\n        {this.props.alllists.map((list,number)=>{\n          <li>\n            list\n          </li>\n        })}\n      </div>\n    );\n  }\n}\nclass Form extends React.Component{\n  render(){\n    return(\n      <form>\n        <label>\n          <input type=\"text\"\n          value={this.props.newlist} onChange={()=>this.pros.onChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"追加\" />\n      </form>\n    );\n  }\n}\n\nReactDOM.render(\n    <Table />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}